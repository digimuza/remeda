{"version":3,"sources":["_core/utils.ts","components/Documentation/Markdown.tsx","components/Layout/index.tsx","components/Documentation/SideBar.tsx","components/Documentation/Card.tsx","components/Documentation/index.tsx","_core/index.ts","reportWebVitals.ts","index.tsx"],"names":["hls","require","beautify","code","window","js_beautify","Markdown","props","className","narrow","dangerouslySetInnerHTML","__html","content","markdown","marked","setOptions","highlight","res","P","value","Header","Layout","Content","Sider","paths","home","key","exact","path","title","documentation","ThemeState","makeAutoObservable","theme","localStorage","getItem","autorun","console","log","setItem","LayoutHeader","observer","route","useRouteMatch","basePath","useBasePath","selected","Object","values","find","q","toString","filter","to","alt","style","width","height","src","mode","defaultSelectedKeys","Item","paddingRight","onChange","checked","checkedChildren","unCheckedChildren","href","Container","padding","margin","minHeight","children","View","overflow","overflowY","PrimaryLayout","basename","sideMenu","readme","tagColor","tag","toLowerCase","SideBar","items","groupedMembers","flatMap","members","name","kind","includes","SearchState","search","map","canonicalReferenceGroup","canonicalReference","display","justifyContent","alignItems","tags","cat","color","defaultOpenKeys","borderRight","length","hljs","DocumentationCard","id","docMember","Title","level","extra","comment","description","parsed","Array","isArray","join","example","bExample","category","group","groupMembers","size","placeholder","onKeyUp","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getData","a","document","getElementsByName","item","getAttribute","axios","get","result","data","BasePathContext","createContext","useContext","usePromise","fn","useState","undefined","state","setState","useEffect","Load","Provider","docs","articles","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a5ebb9f4.chunk.js","sourcesContent":["import * as P from 'ts-prime'\n\nimport marked from 'marked'\nimport \"./themes/dark.scss\"\nimport \"./themes/light.scss\"\nimport \"./themes/markdown.light.scss\"\nimport \"./themes/markdown.dark.scss\"\n// require(\"./beautify.js\")\nconst hls = require('highlight.js')\n\nexport function renderMarkdown(content: string) {\n    return marked.setOptions({\n        highlight: function (code) {\n            const res = P.canFail(() => hls.highlight('typescript', code).value)\n            if (P.isError(res)) {\n                return code\n            }\n\n            return res\n        }\n    })(content)\n}\n\n\nexport function beautify(code: string): string {\n    // return code\n    return (window as any)?.js_beautify(code, {\n        \"indent_size\": \"4\",\n        \"indent_char\": \" \",\n        \"max_preserve_newlines\": \"5\",\n        \"preserve_newlines\": true,\n        \"keep_array_indentation\": true,\n        \"break_chained_methods\": false,\n        \"indent_scripts\": \"keep\",\n        \"brace_style\": \"collapse,preserve-inline\",\n        \"space_before_conditional\": true,\n        \"unescape_strings\": true,\n        \"jslint_happy\": true,\n        \"end_with_newline\": true,\n        \"wrap_line_length\": \"0\",\n        \"indent_inner_html\": true,\n        \"comma_first\": false,\n        \"e4x\": true,\n        \"indent_empty_lines\": true\n      })\n}","import React from \"react\"\nimport { renderMarkdown } from \"../../_core/utils\"\n\n\n\nexport const Markdown = (props: { markdown: string, narrow?: boolean }) => {\n    return <div className={`markdown-body ${props.narrow ? 'narrow' : ''}`} dangerouslySetInnerHTML={{\n        __html: renderMarkdown(props.markdown)\n    }}></div>\n};","import { Card, Layout, Menu } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\nimport \"./themes/light.scss\";\nimport \"./themes/dark.scss\";\nimport { Switch } from \"antd\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  useRouteMatch,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport * as P from \"ts-prime\";\nimport { Markdown } from \"../Documentation/Markdown\";\nimport { observer } from \"mobx-react\";\nimport { makeAutoObservable, autorun } from \"mobx\";\nimport { useBasePath } from \"../..\";\nconst { Header, Content, Sider } = Layout;\n\nconst paths = {\n  home: { key: 1, exact: true, path: \"/\", title: \"Home\" },\n  documentation: {\n    key: 2,\n    path: \"/documentation\",\n    title: \"Documentation\",\n  },\n};\n\nexport const THEME_KEY = \"ts-prime-theme\";\nexport const ThemeState = makeAutoObservable({\n  theme: localStorage.getItem(\"ts-prime-theme\") || \"dark\",\n});\n\nautorun(() => {\n  console.log(ThemeState.theme);\n  localStorage.setItem(THEME_KEY, ThemeState.theme);\n});\n\nconst LayoutHeader = observer(() => {\n  const route = useRouteMatch();\n  const basePath = useBasePath();\n  const selected = [\n    Object.values(paths)\n      .find((q) => q.path === route.path)\n      ?.key.toString(),\n  ].filter(P.isDefined);\n  return (\n    <Header className=\"header\">\n      <Link to={\"/home\"}>\n        <div className={\"logo\"}>\n          <img\n            alt={\"logo\"}\n            style={{\n              width: 100,\n              height: \"auto\",\n            }}\n            src={`${basePath}/logo.svg`}\n          ></img>\n        </div>\n      </Link>\n      <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={selected}>\n        <Menu.Item key={paths.home.key}>\n          <Link to={paths.home.path}>{paths.home.title}</Link>\n        </Menu.Item>\n        <Menu.Item key={paths.documentation.key}>\n          <Link to={paths.documentation.path}>{paths.documentation.title}</Link>\n        </Menu.Item>\n      </Menu>\n      <div className={\"flex\"}></div>\n      <div style={{ paddingRight: 20 }}>\n        <Switch\n          onChange={(q) => {\n            ThemeState.theme = ThemeState.theme === \"dark\" ? \"light\" : \"dark\";\n            return;\n          }}\n          checked={ThemeState.theme === \"light\"}\n          checkedChildren={\"Dark\"}\n          unCheckedChildren={\"Light\"}\n        ></Switch>\n      </div>\n      {ThemeState.theme === \"dark\" ? (\n        <div>\n          <a href={\"https://github.com/digimuza/ts-prime\"}>\n            <img\n              alt={\"Github\"}\n              style={{\n                width: \"auto\",\n                height: \"30px\",\n              }}\n              src={`${basePath}/github.white.svg`}\n            ></img>\n          </a>\n        </div>\n      ) : (\n        <div>\n          <a href={\"https://github.com/digimuza/ts-prime\"}>\n            <img\n              alt={\"Github\"}\n              style={{\n                width: \"auto\",\n                height: \"30px\",\n              }}\n              src={`${basePath}/github.svg`}\n            ></img>\n          </a>\n        </div>\n      )}\n    </Header>\n  );\n});\n\nexport const Container = (props: PropsWithChildren<{ className?: string }>) => {\n  return (\n    <Layout\n      className={`${props.className ?? \"\"}`}\n      style={{ padding: \"0 24px 24px\" }}\n    >\n      <Content\n        className={`content`}\n        style={{\n          padding: 24,\n          margin: 0,\n          minHeight: 280,\n        }}\n      >\n        {props.children}\n      </Content>\n    </Layout>\n  );\n};\nexport const View = (props: PropsWithChildren<{ className?: string }>) => {\n  return (\n    <Layout\n      className={`${props.className ?? \"\"} view`}\n      style={{\n        height: \"calc(100vh - 64px)\",\n        overflow: \"hidden\",\n        overflowY: \"auto\",\n      }}\n    >\n      {props.children}\n    </Layout>\n  );\n};\n\nexport const PrimaryLayout = observer(\n  (\n    props: PropsWithChildren<{\n      sideMenu: JSX.Element;\n      readme: string;\n    }>\n  ) => {\n    const basePath = useBasePath();\n    const theme = P.isOneOf(ThemeState.theme, [\"dark\", \"light\"])\n      ? ThemeState.theme\n      : \"dark\";\n\n    return (\n      <Router basename={basePath}>\n        <Layout className={`ts-prime-${theme}`}>\n          <LayoutHeader></LayoutHeader>\n          <Route {...paths.documentation}>\n            <View>\n              <Sider width={400} className=\"site-layout-background\">\n                {props.sideMenu}\n              </Sider>\n              <Container>{props.children}</Container>\n            </View>\n          </Route>\n          <Route {...paths.home}>\n            <View>\n              <Container>\n                <Card>\n                  <Markdown markdown={props.readme} narrow={true}></Markdown>\n                </Card>\n              </Container>\n            </View>\n          </Route>\n          <Redirect to=\"/\" />\n        </Layout>\n      </Router>\n    );\n  }\n);\n","import { Empty, Menu, Tag } from \"antd\";\nimport React, { Fragment } from \"react\";\nimport { GroupedDocumentationMembers } from \"../../_core\";\nimport * as P from \"ts-prime\";\nimport { observer } from \"mobx-react\";\nimport { SearchState } from \".\";\n\nexport function tagColor(tag: string) {\n  switch (tag.toLowerCase()) {\n    case \"p\":\n      return \"#fa8c16\";\n    case \"array\":\n      return \"#1890ff\";\n    case \"number\":\n      return \"#006d75\";\n    case \"type\":\n      return \"#08979c\";\n    case \"string\":\n      return \"#7cb305\";\n    case \"object\":\n      return \"#13c2c2\";\n    case \"function\":\n      return \"#0050b3\";\n    case \"guard\":\n      return \"#003a8c\";\n    case \"utility\":\n      return \"#9e1068\";\n    default:\n      return;\n  }\n}\nexport const SideBar = observer(\n  (props: { groupedMembers: GroupedDocumentationMembers }) => {\n    const { groupedMembers } = props;\n\n    const items = groupedMembers.flatMap((q) => {\n      return P.sortBy(q.members, (q) => q.name)\n        .filter((q) => q.kind === \"Function\")\n        .filter((q) => q.name.includes(SearchState.search))\n        .map((q) => {\n          return (\n            <Menu.Item key={q.canonicalReferenceGroup}>\n              <a href={`#link-${q.name}`} key={q.canonicalReference}>\n                <div\n                  key={q.canonicalReference}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <div>\n                    <strong>{q.name}</strong>\n                  </div>\n                  <div>\n                    {q.tags\n                      .map((q) => (q.value === \"Pipe\" ? \"P\" : q.value))\n                      .map((cat) => {\n                        return <Tag key={cat} color={tagColor(cat)}>{cat}</Tag>;\n                      })}\n                  </div>\n                </div>\n              </a>\n            </Menu.Item>\n          );\n        });\n    });\n\n    return (\n      <div\n        className={\"side-bar-content\"}\n        style={{\n          height: \"calc(100vh - 64px - 72px)\",\n          overflow: \"hidden\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={[\"1\"]}\n          defaultOpenKeys={[\"sub1\"]}\n          style={{ height: \"90%\", borderRight: 0 }}\n        >\n          {items}\n          {items.length === 0 && (\n            <Fragment>\n              <div style={{ height: 30 }}></div>\n              <Empty />\n            </Fragment>\n          )}\n          <div style={{ height: 100 }}></div>\n        </Menu>\n      </div>\n    );\n  }\n);\n","import { Card, Tag, Typography } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\nimport { DocumentationMembers } from \"../../_core\";\nimport * as P from \"ts-prime\";\nimport BaseSyntaxHighlighter from \"react-syntax-highlighter\";\nimport theme from \"react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark\";\nimport { tagColor } from \"./SideBar\";\nimport { beautify } from \"../../_core/utils\";\nimport \"./Card.css\";\nimport { Markdown } from \"./Markdown\";\n\ntheme.hljs.padding = \"0.5em\";\ntheme.hljs.margin = \"0\";\n\nexport const SyntaxHighlighter = (props: PropsWithChildren<{}>) => {\n  return (\n    <div style={{ borderRadius: 5, overflow: \"hidden\" }}>\n      <BaseSyntaxHighlighter language={\"javascript\"} style={{ ...theme }}>\n        {props.children}\n      </BaseSyntaxHighlighter>\n    </div>\n  );\n};\n\nexport const DocumentationCard = (props: {\n  docMember: DocumentationMembers[number];\n}) => {\n  return (\n    <Card\n      id={`link-${props.docMember.name}`}\n      key={`link-${props.docMember.name}`}\n      title={\n        <Typography.Title level={4}>{props.docMember.name}</Typography.Title>\n      }\n      style={{ width: \"100%\" }}\n      extra={props.docMember.tags\n        .map((q) => (q.value === \"Pipe\" ? \"P\" : q.value))\n        .map((q) => (\n          <Tag key={q} color={tagColor(q)}>{q}</Tag>\n        ))}\n    >\n      <Markdown\n        markdown={props.docMember.members[0].comment.description}\n      ></Markdown>\n      <div style={{ height: 10 }}></div>\n      {props.docMember.members[0].comment.parsed\n        .filter((q) => q.tag === \"@warning\")\n        .map((q) => {\n          if (Array.isArray(q.content)) {\n            return (\n              <div key={q.tag} className={\"warning\"}>\n                <div className={\"dot\"}>WARNING</div>\n                <div className={\"warning-text\"}>\n                  <Markdown markdown={q.content.join(\"\\n\")}></Markdown>\n                </div>\n              </div>\n            );\n          }\n\n          return null\n        })}\n      <div style={{ height: 10 }}></div>\n      {props.docMember.members[0].comment.parsed\n        .filter((q) => q.tag === \"@description\")\n        .map((q) => {\n          if (Array.isArray(q.content)) {\n            return <Markdown key={q.tag} markdown={q.content.join(\"\\n\")}></Markdown>;\n          }\n\n          return null\n        })}\n      <div style={{ height: 10 }}></div>\n      <div>\n        <div>\n          {P.take(props.docMember.members, 1).map((q) => {\n            const example = q.comment.example;\n            if (example == null) return null;\n            const bExample = beautify(q.comment.example);\n            return (\n              <div key={q.canonicalReference}>\n                <Markdown\n                  markdown={`\n\\`\\`\\`typescript\n${beautify(bExample)}\n\\`\\`\\`\n`}\n                ></Markdown>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div style={{ height: 10 }}></div>\n      {/* <div>\n        <div>\n          <SyntaxHighlighter>\n            {P.take(props.docMember.members, 2)\n              .map((q) => excerptTokensToString(q.excerptTokens))\n              .join(\"\\n\")}\n          </SyntaxHighlighter>\n        </div>\n      </div> */}\n    </Card>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport {\n  DocumentationMembers,\n  groupMembers,\n} from \"../../_core\";\nimport { PrimaryLayout } from \"../Layout\";\nimport { Input } from \"antd\";\nimport { SideBar } from \"./SideBar\";\nimport { DocumentationCard } from \"./Card\";\nimport { observer } from \"mobx-react\";\nimport { makeAutoObservable } from \"mobx\";\n\nexport const SearchState = makeAutoObservable({\n  search: \"\",\n});\n\nexport default observer(\n  (props: { documentation: DocumentationMembers; readme: string }) => {\n    const members = props.documentation.filter((q) => q.kind === \"Function\");\n\n    const groupedMembers = groupMembers(members);\n\n    return (\n      <PrimaryLayout\n        readme={props.readme}\n        sideMenu={\n          <Fragment>\n            <div style={{ padding: 10 }}>\n              <Input\n                size={\"large\"}\n                placeholder={\"Search\"}\n                onKeyUp={(q) => (SearchState.search = q.currentTarget.value)}\n              ></Input>\n            </div>\n            <SideBar groupedMembers={groupedMembers}></SideBar>\n          </Fragment>\n        }\n      >\n        {groupedMembers.map((q) => (\n          <div key={q.group}>\n            <div key={q.group}>\n              {q.members.map((q) => (\n                <Fragment key={q.canonicalReference}>\n                  <DocumentationCard key={q.canonicalReference} docMember={q}></DocumentationCard>\n                  <div style={{ height: 10 }}></div>\n                </Fragment>\n              ))}\n            </div>\n          </div>\n        ))}\n      </PrimaryLayout>\n    );\n  }\n);\n","import * as P from 'ts-prime'\nimport { DocuFluxDocumentation } from './types'\nexport function getPackageName(data: DocuFluxDocumentation) {\n    return {\n        name: data.name,\n        version: data.version\n    }\n}\n\nexport function excerptTokensToString(data: ReadonlyArray<DocuFluxDocumentation.ExcerptToken>) {\n    return data.map((q) => q.text).join(\"\").replace('declare', '').replace(/\\s+/gm, ' ')\n}\n\nexport function getMembers(data: DocuFluxDocumentation) {\n    const members = data.members.find((q) => q.kind === 'EntryPoint')\n    if (members == null) throw new Error(\"Failed to find entry point\")\n    return P.pipe(\n        members.members,\n        P.map((w) => {\n            return {\n                kind: w.kind,\n                name: w.name,\n                comment: parseComment(w.docComment),\n                excerptTokens: w.excerptTokens,\n                canonicalReference: w.canonicalReference,\n                package: w.canonicalReference.replace(/(!.+)/gm, ''),\n                canonicalReferenceGroup: w.canonicalReference.replace(/(:.*)/, '')\n            }\n        }),\n        P.groupBy((q) => q.canonicalReferenceGroup),\n        P.mapRecord(([k, v]) => [k, P.omit({ members: v.map((q) => P.omit(q, ['name', 'package'])), ...v[0] }, ['excerptTokens', 'comment'])]),\n        P.mapRecord(([k, v]) => {\n            const tags = P.pipe(\n                v.members,\n                P.flatMap((q) =>\n                    q.comment.parsed\n                        .filter((q) => [\"@category\", \"@pipe\"].includes(q.tag))\n                        .flatMap((q) => {\n                            if (P.isArray(q.content)) {\n                                return q.content.map((z) => {\n                                    return {\n                                        tag: q.tag,\n                                        value: z\n                                    }\n                                });\n                            }\n                            return [];\n                        })\n                ),\n                P.uniqBy((q) => `${q.tag}/${q.value}`),\n                P.filter((q) => q.tag !== \"/\")\n            )\n\n            return [k, { ...v, tags }]\n        }),\n        P.toPairs,\n        P.map(([, v]) => v)\n    )\n}\n\nexport function parseComment(comment: string) {\n    const cleanComment = comment.replace(\"/**\", '').replace(\"*/\", '').split(/^[ ]+?\\*/gm)\n    const row = cleanComment.join(\"\\n\").trim().replace(/(@\\w+)/gm, \"###$1\").split(\"###\").map((q) => q.trim())\n    const description = row.filter((q) => !/@\\w+/.test(q))[0]\n    const parsed = row.filter((q) => /@\\w+/.test(q)).map((w) => {\n        const cc = w.replace(/(@\\w+)/, '$1##').split(\"##\")\n        const tag = cc[0]\n        const content = P.pipe(cc.slice(1), P.flatMap((q) => q.split(\"\\n\").map((q) => q.trim()).filter((q) => q)))\n        if (tag === '@param') {\n            return {\n                tag,\n                content: content.map((q) => {\n                    return {\n                        description: q.replace(/\\w+/, '').trim().replace(/^-/, '').trim(),\n                        name: q.match(/\\w+/)?.[0]\n                    }\n                })[0]\n            }\n        }\n        if (tag === '@example') {\n            return {\n                tag,\n                content: content.map((q) => {\n                    return q as string\n                })\n            }\n        }\n        return {\n            tag,\n            content: content\n        }\n    })\n    return {\n        description,\n        example: '',\n        parsed\n    }\n}\n\nexport type DocumentationMembers = ReturnType<typeof getMembers>;\n\nexport type GroupedDocumentationMembers = ReturnType<typeof groupMembers>;\n\nexport function groupMembers(members: DocumentationMembers) {\n    return P.pipe(\n        members,\n        P.groupBy((q) => {\n            const category = q.tags.find((q) => q.tag === \"@category\");\n            if (category == null) {\n                return \"utils\";\n            }\n            return category.value.toLowerCase();\n        }),\n        P.toPairs,\n        P.map(([group, members]) => {\n            return {\n                group,\n                members,\n            };\n        })\n    );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/Documentation\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DocumentationMembers } from \"./_core\";\nimport axios from \"axios\";\nimport \"react-virtualized/styles.css\";\nimport * as P from \"ts-prime\";\ntype Data = {\n  docs: DocumentationMembers;\n  articles: {\n    readme: string;\n  };\n};\n\nconst getData = async () => {\n  const basePath = await P.waitUntilDefined(\n    () =>\n      document.getElementsByName(\"basePath\")?.item(0)?.getAttribute(\"content\"),\n    3000\n  );\n  const result = await axios.get(`${basePath}/data/data.json`);\n  return result.data as {\n    docs: DocumentationMembers;\n    articles: {\n      readme: string;\n    };\n  };\n};\n\nconst BasePathContext = createContext(\"\");\n\nexport function useBasePath() {\n  return useContext(BasePathContext)\n}\n\nfunction usePromise<T>(fn: () => Promise<T>): T | undefined {\n  const [state, setState] = useState<T | undefined>(undefined);\n  useEffect(() => {\n    fn().then((q) => {\n      setState(q);\n    });\n  }, [fn]);\n\n  return state;\n}\n\n\n\nconst Load = () => {\n  const data = usePromise(() => getData());\n  const basePath = usePromise(() =>\n    P.waitUntilDefined(\n      () =>\n        document\n          .getElementsByName(\"basePath\")\n          ?.item(0)\n          ?.getAttribute(\"content\"),\n      3000\n    )\n  );\n\n  if (basePath == null) return null;\n  if (data == null) return null;\n\n  return (\n    <BasePathContext.Provider value={basePath}>\n      <App\n        key={\"app\"}\n        documentation={data.docs}\n        readme={data.articles.readme}\n      ></App>\n    </BasePathContext.Provider>\n  );\n};\n\nReactDOM.render(<Load />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}